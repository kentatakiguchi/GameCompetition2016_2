#pragma once

#include <DxLib.h>

#include <unordered_map>
#include <string>
#include "../Math/Vector2.h"
enum class ModelID {
	PLAYER,
	ENEMY,
	STAGE,
	STAGE_COLL,
	SKYDOME
};

enum class TextureID {
	//プレイヤーアニメーション（青）
	PLAYER_BUTTY_IDLE,
	PLAYER_BUTTY_MOVE,
	PLAYER_BUTTY_HOLD,
	PLAYER_BUTTY_SWIM,
	PLAYER_BUTTY_SWIM_TURN,
	PLAYER_BUTTY_DEATH,
	PLAYER_BUTTY_DAMAGE,
	PLAYER_BUTTY_DIV_IDLE,
	PLAYER_BUTTY_DIV_MOVE,
	PLAYER_BUTTY_TURN,
	//プレイヤーアニメーション（赤）
	PLAYER_RETTY_IDLE,
	PLAYER_RETTY_MOVE,
	PLAYER_RETTY_HOLD,
	PLAYER_RETTY_SWIM,
	PLAYER_RETTY_SWIM_TURN,
	PLAYER_RETTY_DEATH,
	PLAYER_RETTY_DAMAGE,
	PLAYER_RETTY_DIV_IDLE,
	PLAYER_RETTY_DIV_MOVE,
	PLAYER_RETTY_TURN,
	
	//エフェクト
	PLAYER_EFFECT_SEP_MOVE,
	PLAYER_EFFECT_SEP_EXP,


	//背景画像
	BACKSTAGE1_1_TEX,
	BACKSTAGE1_2_1_TEX,
	BACKSTAGE1_2_2_TEX,
	BACKSTAGE1_3_1_TEX,
	BACKSTAGE1_3_2_TEX,
	BACKSTAGE1_4_TEX,
	BACKSTAGE1_5_TEX,
	BACKSTAGE1_6_TEX,
	BACKSTAGE1_7_TEX,
	BACKSTAGE1_8_1_TEX,
	BACKSTAGE1_8_2_TEX,
	BACKSTAGE1_9_TEX,

	BACKSTAGE2_1_TEX,
	BACKSTAGE2_2_TEX,
	BACKSTAGE2_3_TEX,
	BACKSTAGE2_4_TEX,
	BACKSTAGE2_5_TEX,
	BACKSTAGE2_6_TEX,
	BACKSTAGE2_7_TEX,
	BACKSTAGE2_8_TEX,
	BACKSTAGE2_9_TEX,
	BACKSTAGE2_TOP_TEX,

	BACKSTAGE3_1_TEX,
	BACKSTAGE3_2_TEX,

	BACKSTAGE4_1_TEX,
	BACKSTAGE4_2_TEX,



	BACKGRAUND1_TEX,
	BACKGRAUND2_TEX,
	BACKGRAUND3_TEX,
	BACKGRAUND4_TEX,
	BACKGRAUND12_TEX,
	BACKGRAUND22_TEX,
	BACKGRAUND32_TEX,
	BACKGRAUND42_TEX,
	BACKGRAUND_BOT_TEX,
	BACKGRAUND_TOP_TEX,
	BACKGRAUND_TATE11_TEX,
	BACKGRAUND_TATE21_TEX,
	BACKGRAUND_TATE31_TEX,
	BACKGRAUND_TATE41_TEX,
	BACKGRAUND_TATEYOKO_TEX,
	PUYO_TEST_TEX,

	BOSS_TEX,
	BOSS_GAUGE_TEX,
	// エネミーアニメーション
	ENEMY_EGGENEMY_WALK_TEX,
	ENEMY_EGGENEMY_DISCORVER_TEX,
	ENEMY_EGGENEMY_ATTACK_TEX,
	ENEMY_EGGENEMY_ATTACKTURN_TEX,
	ENEMY_EGGENEMY_DAMAGE_TEX,
	ENEMY_FLYINGENEMY_WALK_TEX,
	ENEMY_FLYINGENEMY_ATTACK_TEX,
	ENEMY_FLYINGENEMY_DAMAGE_TEX,
	ENEMY_NEEDLEENEMY_TEX,
	ENEMY_WALLMOVEENEMY_TEX,
	ENEMY_NEEDLE_TEX,
	ENEMY_WEAPON_TEX,

	// ボスアニメーション
	BOSS_WAIT_TEX,
	BOSS_WAIT_TURN_TEX,
	BOSS_JUMP_UP_TEX,
	BOSS_JUMP_DOWN_TEX,
	BOSS_WALLATTACK_DASH_TEX,
	BOSS_WALLATTACK_DASHJUMP_TEX,
	BOSS_WALLATTACK_DASHJUMP_STOP_TEX,
	BOSS_BREATH_TEX,
	BOSS_BREATH_TURN_TEX,
	BOSS_BREATH_DYSFUNCTION_TEX,
	BOSS_BREATH_LESS_TEX,
	BOSS_PIYO_TEX,
	BOSS_DAMAGE_TEX,
	BOSS_DAMAGE_BOKO_TEX,
	BOSS_DEATH_TEX,
	BOSS_EFFECT_ATTACK_TEX,
	BOSS_EFFECT_BOKO_TEX,
	BOSS_EFFECT_DASH_TEX,
	BOSS_EFFECT_PIYO_TEX,

	CHIP1_TEX,
	CHIP2_TEX,
	CHIP3_TEX,
	CHIP4_TEX,
	PAUSE_BACK_TEX,
	BLACK_BACK_TEX,
	SEGMENT_TRI_TEX,
	SELECT_TARGET_TEX,
	TEXT_ALPHA_TEX,
	CHANGE_SCENE_TEX,
	TITLE_BACK_TEX,
	TITLE_BACK2_TEX,
	TITLE_BACK3_TEX,
	TEAM_LOGO_TEX,
	FLOOR_STAGE1_TEX,
	FLOOR_STAGE2_TEX,
	FLOOR_STAGE3_TEX,
	FLOOR_STAGE4_TEX,
	FLOOR_WOOD_TEX,
	FLOOR_STONE_TEX,
	FLOOR_SUB_TEX

};

enum class SoundID {
	BGM_MENU,
	BGM_STAGE_123,
	BGM_STAGE_4,
	BGM_STAGE_5,
	SE_BUNRI,
	SE_NOBI,
	SE_NOBI_FULL,
	SE_PUYON,
	SE_SHOT,
	SE_SYOUTOTU,
	SE_HAKKEN
};

class ResourceLoader{
private:
	ResourceLoader();
	~ResourceLoader();
public:
	static ResourceLoader& GetInstance();

	void loadModel(ModelID id, const char* file_name);
	void loadTexture(TextureID id, const char* file_name);
	void loadSound(SoundID id, const char* file_name);

	int getModelID(ModelID id);
	int getTextureID(TextureID id);
	int getSoundID(SoundID id);
	//テクスチャのサイズを取得する(引数:テクスチャハンドル,戻り値:Vector2)
	Vector2 GetTextureSize(TextureID id);
	void clearResources();
private:
	std::unordered_map<ModelID, int> models_;
	std::unordered_map<TextureID, int> textures_;
	std::unordered_map<SoundID, int> sounds_;

};